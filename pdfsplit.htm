<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Free online PDF merger tool by Lshworld-AI Tools Hub - Preview and merge specific pages from multiple PDFs.">
    <meta name="keywords" content="PDF merger, combine PDFs, merge PDF files, free PDF tool, Lshworld-AI Tools Hub">
    <meta name="author" content="Lshworld-AI Tools Hub">
    <title>Multiple PDF file Spliter & Merger with Preview - Muvin - AI Tools Hub</title>
    
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            padding: 30px;
            color: #2c3e50;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        header {
            background: linear-gradient(45deg, #6b48ff, #00ddeb);
            padding: 40px 20px;
            text-align: center;
            color: white;
        }

        header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
            text-shadow: 2px 2px 5px rgba(0,0,0,0.2);
        }

        header p {
            font-size: 1.2em;
            opacity: 0.9;
        }

        .upload-area {
            padding: 40px;
        }

        .file-input-wrapper input {
            width: 100%;
            padding: 15px;
            border: 2px dashed #6b48ff;
            border-radius: 10px;
            background: #f8f9ff;
            cursor: pointer;
            transition: all 0.3s;
            margin-bottom: 20px;
        }

        .file-input-wrapper input:hover {
            border-color: #00ddeb;
            background: #fff;
        }

        .file-list, .preview-area {
            margin: 20px 0;
            max-height: 300px;
            overflow-y: auto;
        }

        .file-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px;
            background: #fff;
            margin-bottom: 10px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
            transition: transform 0.2s;
        }

        .file-item:hover {
            transform: translateY(-2px);
        }

        .file-item input[type="text"] {
            width: 150px;
            padding: 5px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .file-item button, .preview-btn {
            background: #e74c3c;
            padding: 8px 15px;
            font-size: 0.9em;
        }

        .preview-btn {
            background: #3498db;
            margin-left: 10px;
        }

        .button-group {
            display: flex;
            gap: 15px;
            margin-top: 20px;
        }

        button {
            padding: 15px;
            background: linear-gradient(45deg, #6b48ff, #00ddeb);
            color: white;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            font-size: 1.1em;
            font-weight: bold;
            text-transform: uppercase;
            letter-spacing: 1px;
            transition: all 0.3s;
            flex: 1;
        }

        button:hover {
            background: linear-gradient(45deg, #5a3de6, #00c4d3);
        }

        .ad-space {
            margin: 20px;
            padding: 20px;
            background: rgba(255, 255, 255, 0.8);
            border-radius: 10px;
            text-align: center;
        }

        .progress {
            display: none;
            margin-top: 20px;
            text-align: center;
            color: #27ae60;
            font-weight: bold;
            animation: pulse 1.5s infinite;
        }

        canvas {
            max-width: 100%;
            border: 1px solid #ddd;
            border-radius: 5px;
            margin: 5px 0;
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.6; }
            100% { opacity: 1; }
        }

        @media (max-width: 768px) {
            .container { margin: 0 10px; }
            header h1 { font-size: 1.8em; }
            .upload-area { padding: 20px; }
            .file-item { flex-direction: column; text-align: center; padding: 10px; }
            .file-item input[type="text"], .file-item button, .preview-btn { margin-top: 10px; }
            .button-group { flex-direction: column; gap: 10px; }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>Multiple PDF file Spliter & Merger with Preview</h1>
            <p>by Muvina - AI Tools Hub</p>
        </header>

        <!-- Top Ad Space -->
        <div class="ad-space">
            <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=YOUR_ADSENSE_PUB_ID"
                    crossorigin="anonymous"></script>
            <ins class="adsbygoogle"
                 style="display:block"
                 data-ad-client="YOUR_ADSENSE_PUB_ID"
                 data-ad-slot="YOUR_AD_UNIT_ID"
                 data-ad-format="auto"
                 data-full-width-responsive="true"></ins>
            <script>
                 (adsbygoogle = window.adsbygoogle || []).push({});
            </script>
        </div>

        <main class="upload-area">
            <div class="file-input-wrapper">
                <input type="file" id="pdfFiles" accept=".pdf" multiple>
            </div>
            <div class="file-list" id="fileList"></div>
            <h3>Selected Pages Preview</h3>
            <div class="preview-area" id="previewArea"></div>
            <div class="button-group">
                <button onclick="addMoreFiles()">Add More Files</button>
                <button onclick="mergePDFs()">Merge PDFs Now</button>
            </div>
            <div class="progress" id="progress">Merging your PDFs...</div>
        </main>

        <!-- Bottom Ad Space -->
        <div class="ad-space">
            <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=YOUR_ADSENSE_PUB_ID"
                    crossorigin="anonymous"></script>
            <ins class="adsbygoogle"
                 style="display:block"
                 data-ad-client="YOUR_ADSENSE_PUB_ID"
                 data-ad-slot="YOUR_AD_UNIT_ID"
                 data-ad-format="auto"
                 data-full-width-responsive="true"></ins>
            <script>
                 (adsbygoogle = window.adsbygoogle || []).push({});
            </script>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf-lib/1.17.1/pdf-lib.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.9.359/pdf.min.js"></script>
    <script>
        let filesArray = [];

        document.getElementById('pdfFiles').addEventListener('change', async function(e) {
            const newFiles = Array.from(e.target.files);
            for (const file of newFiles) {
                const arrayBuffer = await file.arrayBuffer();
                const pdf = await PDFLib.PDFDocument.load(arrayBuffer);
                filesArray.push({ file, totalPages: pdf.getPageCount(), selectedPages: '' });
            }
            updateFileList();
            clearFileInput();
        });

        function addMoreFiles() {
            document.getElementById('pdfFiles').click();
        }

        function clearFileInput() {
            document.getElementById('pdfFiles').value = '';
        }

        function updateFileList() {
            const fileList = document.getElementById('fileList');
            fileList.innerHTML = '';
            
            filesArray.forEach((item, index) => {
                const div = document.createElement('div');
                div.className = 'file-item';
                div.innerHTML = `
                    ${item.file.name} (${(item.file.size / 1024).toFixed(2)} KB, Pages: 1-${item.totalPages})
                    <input type="text" placeholder="e.g., 2,5,10" value="${item.selectedPages}" onchange="updatePages(${index}, this.value)">
                    <button onclick="removeFile(${index})">Remove</button>
                    <button class="preview-btn" onclick="previewSelectedPages(${index})">Preview</button>
                `;
                fileList.appendChild(div);
            });
        }

        function updatePages(index, value) {
            filesArray[index].selectedPages = value;
            previewSelectedPages(index);
        }

        function removeFile(index) {
            filesArray.splice(index, 1);
            updateFileList();
            updatePreview();
        }

        async function previewSelectedPages(index) {
            const item = filesArray[index];
            const arrayBuffer = await item.file.arrayBuffer();
            const pdfDoc = await pdfjsLib.getDocument({ data: arrayBuffer }).promise;
            let pageIndices = item.selectedPages.trim() === '' 
                ? Array.from({ length: item.totalPages }, (_, i) => i)
                : item.selectedPages.split(',').map(num => parseInt(num.trim()) - 1).filter(num => num >= 0 && num < item.totalPages);

            updatePreview();
        }

        async function updatePreview() {
            const previewArea = document.getElementById('previewArea');
            previewArea.innerHTML = '';

            for (const item of filesArray) {
                if (item.selectedPages.trim() === '' && item.totalPages > 0) continue; // Skip if no pages selected yet

                const arrayBuffer = await item.file.arrayBuffer();
                const pdfDoc = await pdfjsLib.getDocument({ data: arrayBuffer }).promise;
                const pageIndices = item.selectedPages.trim() === '' 
                    ? [] 
                    : item.selectedPages.split(',').map(num => parseInt(num.trim()) - 1).filter(num => num >= 0 && num < item.totalPages);

                if (pageIndices.length === 0) continue;

                const filePreview = document.createElement('div');
                filePreview.innerHTML = `<strong>${item.file.name} - Selected Pages:</strong>`;
                previewArea.appendChild(filePreview);

                for (const pageNum of pageIndices) {
                    const page = await pdfDoc.getPage(pageNum + 1);
                    const scale = 0.5;
                    const viewport = page.getViewport({ scale });
                    const canvas = document.createElement('canvas');
                    const context = canvas.getContext('2d');
                    canvas.height = viewport.height;
                    canvas.width = viewport.width;

                    await page.render({ canvasContext: context, viewport }).promise;
                    filePreview.appendChild(canvas);
                }
            }
        }

        async function mergePDFs() {
            if (filesArray.length === 0) {
                alert('Please upload at least one PDF file');
                return;
            }

            document.getElementById('progress').style.display = 'block';

            const mergedPdf = await PDFLib.PDFDocument.create();
            
            for (const item of filesArray) {
                const pdf = await PDFLib.PDFDocument.load(await item.file.arrayBuffer());
                let pageIndices = item.selectedPages.trim() === '' 
                    ? pdf.getPageIndices() 
                    : item.selectedPages.split(',').map(num => parseInt(num.trim()) - 1).filter(num => num >= 0 && num < item.totalPages);

                const copiedPages = await mergedPdf.copyPages(pdf, pageIndices);
                
                copiedPages.forEach((page) => {
                    const { width, height } = page.getSize();
                    page.drawText('Lshworld-AI Tools Hub', {
                        x: width / 2 - 70,
                        y: 20,
                        size: 12,
                        color: PDFLib.rgb(0.5, 0.5, 0.5),
                        opacity: 0.5
                    });
                    mergedPdf.addPage(page);
                });
            }

            const pdfBytes = await mergedPdf.save();
            const blob = new Blob([pdfBytes], { type: 'application/pdf' });
            const url = URL.createObjectURL(blob);
            
            const link = document.createElement('a');
            link.href = url;
            link.download = 'merged-document-by-Lshworld.pdf';
            link.click();

            document.getElementById('progress').style.display = 'none';
        }
    </script>
<footer>
        <center><p>&copy; 2025 S.Oyyathevan - AI Tools Hub. All rights reserved.</p></center>
    </footer>
</body>
</html>
